{"version":3,"sources":["logo.svg","app/TodoItem.js","app/Todos.js","app/layout/navar.js","app/AddTodo.js","app/pages/about.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","TodoItem","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","getStyle","background","textDecoration","props","todo","completed","color","fontStyle","fontWeight","inherits","createClass","key","value","_this$props$todo","id","title","react_default","a","createElement","ListGroup","ListGroupItem","style","Input","addon","type","onChange","markComplete","bind","Button","onClick","delTodo","float","Component","Todos","taskComplete","console","log","_this2","todos","map","t","app_TodoItem","borraTodo","NavBarHeader","toggleNavbar","assertThisInitialized","state","collapsed","setState","Navbar","dark","NavbarBrand","href","className","NavbarToggler","Collapse","isOpen","navbar","Nav","NavItem","Link","to","NavLink","target","AddTodo","addTodo","e","defineProperty","name","onSubmit","preventDefault","display","flex","padding","placeholder","About","Fragment","App","checkCompleteTask","deleteTodo","axios","delete","then","res","toConsumableArray","filter","newTodo","post","data","get","_this3","BrowserRouter","navar","Route","exact","path","render","src","logo","alt","app_AddTodo","app_Todos","component","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.f508c270.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\r\nimport { ListGroup, ListGroupItem , Input} from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport { Button } from 'reactstrap';\r\n\r\n\r\n\r\nexport  class TodoItem extends Component {\r\n\r\n\r\n\r\n/* @ GET STYLE WHEN STATUS COMPLETE  */\r\n    getStyle = () => {\r\n        return {\r\n                background: '#fef4f4',\r\n                textDecoration : this.props.todo.completed ? 'line-through' : 'none',\r\n                color : this.props.todo.completed ? '#7aa711' : '#a71b11',\r\n                fontStyle: this.props.todo.completed ? 'normal' : 'italic',\r\n                fontWeight: this.props.todo.completed ? 'normal' : 'bold'\r\n                }\r\n        // if(this.props.todo.completed) {\r\n        //     return{ textDecoration: 'line-through'}\r\n        // } else {\r\n        //     return{ textDecoration: 'none'};\r\n        // }\r\n    };\r\n\r\n//* @  PASS EVENT TROUGH PARENT COMPONENTE CLAIM-LADER TO MARK COMPLETE TASK*/\r\n//USAR ARR => porque al estar dentro de COMPONENT this.props tiene valor \r\n    // markComplete(e) {\r\n    //     console.log(this.props); //undefined al ser un metdo custom\r\n    //     console.log(this.props); //this.markComplete.this.bind(this)    \r\n    // }\r\n\r\n    // markComplete = (e) => {\r\n    //     console.log(this.props.todo.id);\r\n    // }; \r\n\r\n\r\n    /* @ https://javascriptplayground.com/es6-destructuring/ */\r\n    //sacar las variables del this, o de un objeto\r\n\r\n\r\n    render() {\r\n    // destructuring dentro del contexto\r\n        const {id, title} = this.props.todo;\r\n\r\n        return (\r\n            <ListGroup>\r\n            <ListGroupItem style= { this.getStyle() }>\r\n                                                {/*SE ASIGNA AL PROPS PARA IR SUBIENDO AL PADRE   */}\r\n                <Input addon type=\"checkbox\"  \r\n                // onChange={ this.props.markComplete.bind(this, this.props.todo.id) } />\r\n                onChange={ this.props.markComplete.bind(this, id) } />\r\n                    {''} { this.props.todo.title } \r\n                {/* <button onClick={this.props.delTodo.bind(this, id)}  style={btnStyle}> x </button> */}\r\n                <Button onClick={this.props.delTodo.bind(this, id)}  \r\n                color=\"danger\" style={{float: 'right'}}>X</Button>{' '}\r\n                                                {/*SHAY QUE PASAR EL ID    */}\r\n            </ListGroupItem>\r\n        </ListGroup>\r\n    \r\n    )}\r\n}\r\n\r\n//IS a validatios like and interface->\r\nTodoItem.propTypes = {\r\n    todo : PropTypes.object.isRequired,\r\n    delTodo: PropTypes.func.isRequired,\r\n    markComplete: PropTypes.func.isRequired\r\n\r\n}\r\n\r\nconst btnStyle = {\r\n    background: '#dd1c0e',\r\n    color: '#fff',\r\n    border: 'none',\r\n    padding: '5px 8px',\r\n    borderRadius: '50%',\r\n    cursor: 'pointer',\r\n    float: 'right'\r\n}\r\n\r\nconst itemStyle = {\r\n    fontSize: 24,\r\n    textDecoration: 'line-through'\r\n}\r\n\r\n\r\n\r\nexport default TodoItem\r\n","import React, {Component} from 'react';\r\nimport TodoItem from './TodoItem';\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nclass  Todos extends Component {\r\n    // state = { :  }\r\n\r\n    taskComplete = () => {\r\n        console.log('HELLO FROM ITEMTODO');\r\n    };\r\n\r\n    render() { \r\n        console.log('from app.js', this.props.todos);\r\n        return this.props.todos.map( (t) =>  (\r\n\r\n            <TodoItem key= {t.id} todo = { t }  \r\n                markComplete= {this.props.taskComplete}\r\n                delTodo= {this.props.borraTodo}  />\r\n            // <span>{t.id} </span>    \r\n            // <p> key:{ t.id} |  {t.title}</p>    \r\n        ));\r\n    }\r\n}\r\n\r\n//IS a validatios like and interface->\r\nTodos.propTypes = {\r\n    todos : PropTypes.array.isRequired,\r\n    taskComplete : PropTypes.func.isRequired,\r\n    delTodo: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Todos;","import React , {Component }from 'react';\r\nimport { Collapse, Navbar, NavbarToggler, NavbarBrand, Nav, NavItem, NavLink } from 'reactstrap';\r\nimport { Link }  from 'react-router-dom';\r\n// import logo from '../../../logo.svg';\r\n\r\n\r\nclass NavBarHeader extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    \r\n        this.toggleNavbar = this.toggleNavbar.bind(this);\r\n        this.state = {\r\n            collapsed: true\r\n        }\r\n\r\n    }\r\n    \r\n    toggleNavbar() {\r\n    this.setState({\r\n        collapsed: !this.state.collapsed\r\n    });\r\n    }\r\n\r\n\r\n        render() {\r\n        return (\r\n            <Navbar color=\"dark\" dark>\r\n\r\n            <NavbarBrand href=\"/\" className=\"mr-auto\">\r\n                {/* <img src={logo}  alt=\"logo\"/> */}\r\n                Todo React\r\n            </NavbarBrand>\r\n\r\n            <NavbarToggler onClick={this.toggleNavbar} className=\"mr-2\" />\r\n\r\n                <Collapse isOpen={!this.state.collapsed} navbar>\r\n                    <Nav navbar>\r\n                        <NavItem className=\"white-text\">\r\n                            {/* <NavLink href=\"/components/\" >Components</NavLink> */}\r\n                            <Link to=\"/\"  className=\"white-text\">Home</Link>\r\n                        </NavItem>\r\n                        <NavItem >\r\n                            {/* <NavLink href=\"/components/\" >Components</NavLink> */}\r\n                            <Link to=\"/about\" >about</Link>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink target=\"_blank\" href=\"https://github.com/tspeu\">GitHub</NavLink>\r\n                        </NavItem>\r\n                    </Nav>\r\n                </Collapse>\r\n            </Navbar>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NavBarHeader;","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button } from 'reactstrap';\r\n\r\n\r\nexport class AddTodo extends Component {\r\n\r\n\r\n    //componene STATE only esxits in the component\r\n    state = {\r\n        title : ''\r\n    }\r\n\r\n    /*ADD todo from input */\r\n    addTodo = (e) => {\r\n\r\n        // console.log('from input-name > ',e.target.name);\r\n        // console.log('from input-> ',e.target.value);\r\n        this.setState({\r\n            [e.target.name] : e.target.value\r\n        });\r\n    };\r\n\r\n    //ENVIAR LOS DATOS por el form haci el padre. App.js\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        this.props.addTodo(this.state.title);\r\n        //clear\r\n        this.setState({ [e.target.name] : '' });\r\n    };\r\n\r\n    render() {\r\n    return (\r\n        <div className={'row justify-content-center'}>\r\n            <div className={'col-md-5'}>\r\n                <form onSubmit={this.onSubmit} style= {{ display: 'flex'}}>\r\n            {/* <form onSubmit={this.onSubmit} style= {{ display: 'flex'}}> */}\r\n\r\n                    {/* <label style= {{ flex: '2'}}>New TODO</label> */}\r\n\r\n                    <input type=\"text\"  name=\"title\" \r\n                    style={{flex: '4' , padding:'0.2em' }}\r\n                    placeholder=\"add todo ...\"\r\n                    value= {this.state.title}\r\n                    onChange= {this.addTodo}/>\r\n\r\n                    {/* <Button  onClick={this.onSubmit} color=\"info\">Add</Button>{' '} */}\r\n                    <Button  onClick={this.onSubmit} color=\"info\">Add</Button>{' '}\r\n\r\n                    {/* <input type=\"submit\" value=\"Add\"\r\n                        className=\"btn\"\r\n                    style= {{ flex: '1'}} /> */}\r\n                </form>\r\n            </div>\r\n        </div>\r\n        )\r\n    }   \r\n}\r\n\r\nconst btn = {\r\n\r\n}\r\n\r\n//IS a validatios like and interface->\r\nAddTodo.propTypes = {\r\n    AddTodo : PropTypes.func.isRequired,\r\n\r\n}\r\n\r\n\r\n\r\nexport default AddTodo\r\n","import React from 'react'\r\n\r\nfunction About() {\r\n    return (\r\n    <React.Fragment>\r\n        <h1>About </h1>\r\n        <p>Todo list app vr. 1.0.0</p>\r\n    </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default About;\r\n","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route} from 'react-router-dom';\nimport uuid from 'uuid';\nimport axios from 'axios';\nimport logo from './logo.svg';\nimport './App.css';\nimport Todos from './app/Todos';\nimport NavBarHeader from './app/layout/navar';\nimport AddTodo from './app/AddTodo';\nimport About from './app/pages/about';\n\nclass App extends Component {\n\n  state = {\n    todos : [\n\n    ]\n  };\n\n\n  componentDidMount() {\n    axios.get('https://jsonplaceholder.typicode.com/todos?_limit=10')\n    .then(res => \n      this.setState({\n        todos: res.data\n      })\n      );\n  }\n\n  //@ Recive desde ITemTodos y cambia el estado de markComplete\n  checkCompleteTask = (id) => {\n    // console.log('--recide de ItemTodo- TODOS', id);\n    this.setState({\n        todos: this.state.todos.map( t => {\n          if(t.id === id) {\n            t.completed = !t.completed;\n          }\n          return t;\n        })\n        \n        });\n    // this.props.todos.markComplete\n  };\n\n\n  /* @ BORRDA TODO FROM ItemTodo */\n  deleteTodo = (id) => {\n    console.log('borra todo desde ITEM TODO > ' , id);\n\n    axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`)\n    .then(res => \n      this.setState({ \n        todos: [...this.state.todos.filter( t => t.id !== id )]\n      })\n      );\n      //remove with Filter and rerurn other array\n      //NO BORRA , hace una copia del Arrar y solo se muetran los que son distintos del que se ha clck\n\n  }\n\n\n  //recibe el add Todo de ITem y crea uno nuevo\n  newTodo = (title) => {\n    console.log('APP' , title);\n    \n    // const newTodo = {\n    //   id : uuid.v4(),\n    //   title,\n    //   completed : false\n    // }\n    axios.post('https://jsonplaceholder.typicode.com/todos', {title, completed : false})\n    .then(res => this.setState({\n              todos : [...this.state.todos, res.data]\n            })\n        );\n  }\n\n  render() {\n    console.log('todos', this.state.todos);\n\n    return (\n      <Router>\n        <div className=\"App\">\n        < NavBarHeader />\n\n        <Route exact path=\"/\" render={ props =>(\n          <React.Fragment>\n            <div className=\"jumbotron\">\n              <img src={logo} className=\"App-logo\" alt=\"logo\" />\n              <p>Edit <code  className=\"App-link\">src/App.js</code> \n                and save to reload. </p>\n            </div>\n            <div className=\"container-fluid p-3\">\n                < AddTodo addTodo ={ this.newTodo}  />\n            </div>\n            <div className=\"container\">\n              <Todos  \n                todos={this.state.todos} \n                taskComplete= {this.checkCompleteTask} \n                borraTodo= {this.deleteTodo } />\n            </div>\n          </React.Fragment>\n        )} />\n\n        <Route path=\"/about\" component= {About} />\n\n\n        \n\n\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n//import '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n//  import 'bootstrap/dist/css/bootstrap.min.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}